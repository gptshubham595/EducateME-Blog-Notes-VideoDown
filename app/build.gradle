apply plugin: 'com.android.application'

android {
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.shubham.iitg"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled = true
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    useLibrary 'org.apache.http.legacy'

}

allprojects {
    repositories {
        flatDir {
            dirs 'libs'
            google()
            maven { url 'https://jitpack.io' }
            maven {
                url "https://s3.amazonaws.com/repo.commonsware.com"
            }
            maven {
                url "http://dl.bintray.com/lukaville/maven"
            }

        }
    }
}
def supportLibVersion = '24.2.0'

def dbflow_version = "4.2.4"

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy.MM.dd-HH.mm')
    return formattedDate
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/awais.jar')
    implementation 'at.blogc:expandabletextview:1.0.5'
    implementation project(':dBPullToRefresh')
    implementation 'com.io.tools.android.ramiloif.folderchooser:folderchooser-dialog:1.0.6'
    implementation 'com.codemybrainsout.rating:ratingdialog:1.0.8'
    implementation 'org.jsoup:jsoup:1.12.1'
    implementation project(':wowoviewpager')
    implementation 'com.tbuonomo.andrui:viewpagerdotsindicator:3.0.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.2.0'
    //noinspection GradleCompatible
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //noinspection GradleCompatible
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //noinspection GradleCompatible
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    //noinspection GradleCompatible
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.9.1'
    testImplementation 'org.mockito:mockito-core:2.15.0'
    //noinspection GradleCompatible
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.github.hajiyevelnur92:intentanimation:1.0'

    //to load pictures
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'org.apache.httpcomponents:httpcore:4.4.10'
    //noinspection DuplicatePlatformClasses
    implementation 'org.apache.httpcomponents:httpclient:4.5.6'
    //if possible image cropping functionality
    api 'com.theartofdev.edmodo:android-image-cropper:2.7.0'
    implementation 'com.github.blocoio:faker:1.2.5'
    annotationProcessor "org.projectlombok:lombok:1.16.14"
    annotationProcessor 'org.projectlombok:lombok:1.16.14'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    //directly getting circular image
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //to load images even offline and fast while storing in a compressed format
    implementation 'id.zelory:compressor:2.1.0'

    //if used for zoom effect image
    implementation 'com.github.chrisbanes:PhotoView:2.1.4'

    implementation 'com.github.Shashank02051997:FancyToast-Android:0.1.6'
    // to get dialog boxes in spots loading design
    implementation 'com.github.d-max:spots-dialog:1.1@aar'
    // to convert json into object and vice-versa using google gson
    //firebase if used further
    implementation 'com.google.firebase:firebase-database:11.8.0'
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.google.firebase:firebase-auth:11.8.0'
    implementation 'com.google.firebase:firebase-storage:11.8.0'
    implementation 'com.google.firebase:firebase-firestore:11.8.0'

    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.chaos.view:pinview:1.3.2'

    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'com.github.PhilJay:MPAndroidChart:v2.2.4'

    implementation 'com.github.vivchar:ViewPagerIndicator:1.1.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.0.1'
    implementation 'jp.wasabeef:richeditor-android:1.2.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17'

}

apply plugin: 'com.google.gms.google-services'
